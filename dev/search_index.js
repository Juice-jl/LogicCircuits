var documenterSearchIndex = {"docs":
[{"location":"index.html#LogicCircuits.jl-Documentation-1","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.jl Documentation","text":"","category":"section"},{"location":"index.html#","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.jl Documentation","text":"Documentation for LogicCircuits.jl","category":"page"},{"location":"index.html#","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.jl Documentation","text":"See the individual modules' API overviews below.","category":"page"},{"location":"index.html#Data-Module-API-1","page":"LogicCircuits.jl Documentation","title":"Data Module API","text":"","category":"section"},{"location":"index.html#","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.jl Documentation","text":"Modules = [Data]","category":"page"},{"location":"index.html#LogicCircuits.Data.AbstractData","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Data.AbstractData","text":"Any form of data where features are of type X\n\n\n\n\n\n","category":"type"},{"location":"index.html#LogicCircuits.Data.BatchedXDataset","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Data.BatchedXDataset","text":"Batches of unlabeled data with train/validation/test splits\n\n\n\n\n\n","category":"type"},{"location":"index.html#LogicCircuits.Data.BatchedXYDataset","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Data.BatchedXYDataset","text":"Batches of labeled data with train/validation/test splits\n\n\n\n\n\n","category":"type"},{"location":"index.html#LogicCircuits.Data.Dataset","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Data.Dataset","text":"A dataset with train/validation/test splits\n\n\n\n\n\n","category":"type"},{"location":"index.html#LogicCircuits.Data.LabeledDataset","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Data.LabeledDataset","text":"A labeled dataset with train/validation/test splits\n\n\n\n\n\n","category":"type"},{"location":"index.html#LogicCircuits.Data.PlainXData","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Data.PlainXData","text":"Unlabeled data (X-values) with a direct matrix representation\n\n\n\n\n\n","category":"type"},{"location":"index.html#LogicCircuits.Data.UnlabeledDataset","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Data.UnlabeledDataset","text":"An unlabeled dataset with train/validation/test splits\n\n\n\n\n\n","category":"type"},{"location":"index.html#LogicCircuits.Data.WXData","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Data.WXData","text":"Unlabeled data (X-values) with weights for each example\n\n\n\n\n\n","category":"type"},{"location":"index.html#LogicCircuits.Data.XBatches","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Data.XBatches","text":"Batches of unlabeled XData\n\n\n\n\n\n","category":"type"},{"location":"index.html#LogicCircuits.Data.XData","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Data.XData","text":"Abstract unlabeled data (X-values)\n\n\n\n\n\n","category":"type"},{"location":"index.html#LogicCircuits.Data.XDataset","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Data.XDataset","text":"An single unlabeled dataset with train/validation/test splits\n\n\n\n\n\n","category":"type"},{"location":"index.html#LogicCircuits.Data.XYBatches","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Data.XYBatches","text":"Batches of labeled XYData\n\n\n\n\n\n","category":"type"},{"location":"index.html#LogicCircuits.Data.XYData","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Data.XYData","text":"Labeled data (X-values with Y-labels)\n\n\n\n\n\n","category":"type"},{"location":"index.html#LogicCircuits.Data.XYDataset","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Data.XYDataset","text":"An single labeled dataset with train/validation/test splits\n\n\n\n\n\n","category":"type"},{"location":"index.html#LogicCircuits.Data.aggr_weight_type-Tuple{Any}","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Data.aggr_weight_type","text":"What type should instance weights aggregate to?\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Data.feature_data-Tuple{XYData}","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Data.feature_data","text":"Get the unlabeled feature portion of the data\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Data.feature_matrix-Tuple{XData}","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Data.feature_matrix","text":"Get the data as a feature matrix\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Data.feature_type-Union{Tuple{Type{#s36} where #s36<:AbstractData{X}}, Tuple{X}} where X","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Data.feature_type","text":"Get the type of the feature matrix elements\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Data.label_type-Union{Tuple{XYData{X,Y,XD,V} where V<:(AbstractArray{#s13,1} where #s13<:Y) where XD<:(XData{#s14,M} where M<:(AbstractArray{#s141,2} where #s141<:#s14) where #s14<:X)}, Tuple{Y}, Tuple{X}} where Y where X","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Data.label_type","text":"Get the type of the label vector elements\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Data.labels-Tuple{XYData}","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Data.labels","text":"Get the label vector of the data\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Data.max_batch_size-Tuple{Union{XData, XYData}}","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Data.max_batch_size","text":"Size of the largest batch\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Data.num_batches-Tuple{Union{AbstractArray{#s14,1} where #s14<:XD where XD<:(XData{X,M} where M<:(AbstractArray{#s14,2} where #s14<:X)) where X, AbstractArray{#s14,1} where #s14<:XYD where XYD<:(XYData{X,Y,XD,V} where V<:(AbstractArray{#s13,1} where #s13<:Y) where XD<:(XData{#s14,M} where M<:(AbstractArray{#s141,2} where #s141<:#s14) where #s14<:X)) where Y where X}}","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Data.num_batches","text":"Number of batches in the dataset\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Data.num_examples-Tuple{Nothing}","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Data.num_examples","text":"Number of examples in data\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Data.num_features-Tuple{WXData}","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Data.num_features","text":"Number of features in the data\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Data.num_labels-Tuple{XYData}","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Data.num_labels","text":"Number of labels in the data\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Data.test-Tuple{Dataset}","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Data.test","text":"Get the testing fold of the data\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Data.total_example_weight-Tuple{Nothing}","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Data.total_example_weight","text":"Count the number of example in a weighted dataset\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Data.train-Tuple{Dataset}","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Data.train","text":"Get the training fold of the data\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Data.unweighted_data-Tuple{PlainXData}","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Data.unweighted_data","text":"Get the data as plain unweighted data\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Data.valid-Tuple{Dataset}","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Data.valid","text":"Get the validation fold of the data\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Data.vslice-Tuple{PlainXData,Any,Any}","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Data.vslice","text":"Get slices of data (rows and columns ids) as a view (no memory allocation)\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Data.weights-Tuple{WXData}","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Data.weights","text":"Get the weight vector of the data\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Data.replace_features-Union{Tuple{M}, Tuple{PlainXData,M}} where M","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Data.replace_features","text":"Replace the feature matrix in data by a given matrix\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Data.unslice-Union{Tuple{Array{PlainXData{X,M},1}}, Tuple{M}, Tuple{X}} where M where X","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Data.unslice","text":"Undo batch operation, combine batches into one\n\n\n\n\n\n","category":"method"},{"location":"index.html#Utils-Module-API-1","page":"LogicCircuits.jl Documentation","title":"Utils Module API","text":"","category":"section"},{"location":"index.html#","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.jl Documentation","text":"Modules = [Utils]","category":"page"},{"location":"index.html#LogicCircuits.Utils","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Utils","text":"Module with general utilities and missing standard library features that could be useful in any Julia project\n\n\n\n\n\n","category":"module"},{"location":"index.html#Base.typejoin-Tuple{AbstractArray}","page":"LogicCircuits.jl Documentation","title":"Base.typejoin","text":"Get the most specific type parameter possible for an array\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Utils.children-Tuple{Node}","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Utils.children","text":"Get the children of a given inner node\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Utils.copy_with_eltype-Tuple{Any,Type}","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Utils.copy_with_eltype","text":"Copy the array while changing the element type\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Utils.flip_bit-Union{Tuple{DagNode}, Tuple{Bit}, Tuple{DagNode,Val{Bit}}} where Bit","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Utils.flip_bit","text":"Flip the bit field throughout this circuit (or ensure it is set to given value)\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Utils.foldup-Union{Tuple{T}, Tuple{AbstractArray{#s14,1} where #s14<:DagNode,Function,Function,Type{T}}} where T","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Utils.foldup","text":"Compute a function bottom-up on the circuit.  f_leaf is called on leaf nodes, and f_inner is called on inner nodes. Values of type T are passed up the circuit and given to f_inner as a function on the children.\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Utils.foldup_aggregate-Union{Tuple{T}, Tuple{AbstractArray{#s14,1} where #s14<:DagNode,Function,Function,Type{T}}} where T","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Utils.foldup_aggregate","text":"Compute a function bottom-up on the circuit.  f_leaf is called on leaf nodes, and f_inner is called on inner nodes. Values of type T are passed up the circuit and given to f_inner in aggregate as a vector from the children.\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Utils.grapheltype-Tuple{AbstractArray{#s14,1} where #s14<:Node}","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Utils.grapheltype","text":"Get the type of node contained in this graph\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Utils.has_children-Tuple{Node}","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Utils.has_children","text":"Does the node have children?\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Utils.inode_stats-Tuple{Union{DagNode, AbstractArray{#s14,1} where #s14<:Node}}","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Utils.inode_stats","text":"Give count of types and fan-ins of inner nodes in the graph\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Utils.inodes-Tuple{Union{DagNode, AbstractArray{#s14,1} where #s14<:Node}}","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Utils.inodes","text":"Get the list of inner nodes in a given graph\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Utils.isequal_local","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Utils.isequal_local","text":"Is one node equal to another locally, ignoring children?\n\n\n\n\n\n","category":"function"},{"location":"index.html#LogicCircuits.Utils.isequal_unordered-Tuple{AbstractArray{#s14,1} where #s14<:TreeNode,AbstractArray{#s14,1} where #s14<:TreeNode}","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Utils.isequal_unordered","text":"Is one unordered tree equal to another?\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Utils.issomething-Tuple{Any}","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Utils.issomething","text":"Is the argument not nothing?\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Utils.lca-Tuple{DagNode}","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Utils.lca","text":"Find the least common ancestor (assumes the graph has a parent pointer and a list of descendents)\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Utils.leaf_stats-Tuple{Union{DagNode, AbstractArray{#s14,1} where #s14<:Node}}","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Utils.leaf_stats","text":"Give count of types of leaf nodes in the graph\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Utils.leafnodes-Tuple{AbstractArray{#s14,1} where #s14<:Node}","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Utils.leafnodes","text":"Get the list of leaf nodes in a given graph\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Utils.left_most_child-Tuple{DagNode}","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Utils.left_most_child","text":"Return the leftmost child.\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Utils.lower_element_type-Union{Tuple{AbstractArray{T,N} where N}, Tuple{T}} where T","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Utils.lower_element_type","text":"Specialize the type parameter of an array to be most specific\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Utils.node2dag-Union{Tuple{DagNode}, Tuple{T}, Tuple{DagNode,Type{T}}} where T","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Utils.node2dag","text":"Rebuild a DAG's linear bottom-up order from a new root node\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Utils.node_stats-Tuple{Union{DagNode, AbstractArray{#s14,1} where #s14<:Node}}","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Utils.node_stats","text":"Give count of types and fan-ins of all nodes in the graph\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Utils.num_children-Tuple{Node}","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Utils.num_children","text":"Get the number of children of a given inner node\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Utils.num_edges-Tuple{AbstractArray{#s14,1} where #s14<:Node}","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Utils.num_edges","text":"Number of edges in the graph\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Utils.num_nodes-Tuple{AbstractArray{#s14,1} where #s14<:Node}","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Utils.num_nodes","text":"Number of nodes in the graph\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Utils.pushrand!-Tuple{AbstractArray{#s13,1} where #s13,Any}","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Utils.pushrand!","text":"Push element into random position\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Utils.right_most_child-Tuple{DagNode}","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Utils.right_most_child","text":"Return the rightmost child.\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Utils.tree_num_nodes-Tuple{AbstractArray{#s14,1} where #s14<:DagNode}","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Utils.tree_num_nodes","text":"Compute the number of nodes in of a tree-unfolding of the DAG. \n\n\n\n\n\n","category":"method"},{"location":"index.html#StatsFuns.logsumexp-Tuple{AbstractArray,Any}","page":"LogicCircuits.jl Documentation","title":"StatsFuns.logsumexp","text":"Marginalize out dimensions dims from log-probability tensor\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Utils.Downpass","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Utils.Downpass","text":"Compute a function top down on the circuit. f_root is called on the root node, f_leaf is called on leaf nodes, and f_inner is called on inner nodes. Values of type T are passed down the circuit and given to f_inner as a value from the parent.\n\n\n\n\n\n","category":"type"},{"location":"index.html#Base.filter-Union{Tuple{T}, Tuple{Function,DagNode}, Tuple{Function,DagNode,Type{T}}} where T","page":"LogicCircuits.jl Documentation","title":"Base.filter","text":"Retrieve list of nodes in circuit matching predicate p\n\n\n\n\n\n","category":"method"},{"location":"index.html#Base.isequal-Tuple{AbstractArray{#s14,1} where #s14<:TreeNode,AbstractArray{#s14,1} where #s14<:TreeNode}","page":"LogicCircuits.jl Documentation","title":"Base.isequal","text":"Is one ordered tree equal to another?\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Utils.expand_product-Union{Tuple{E}, Tuple{Any,Type{E},Union{Expr, Symbol},Union{Expr, Symbol}}} where E","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Utils.expand_product","text":"generate an expression for the loop-unrolled product of x1 and xs...\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits.Utils.expand_product-Union{Tuple{E}, Tuple{Any,Type{E},Union{Expr, Symbol}}} where E","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.Utils.expand_product","text":"generate an expression for the loop-unrolled product of xs...\n\n\n\n\n\n","category":"method"},{"location":"index.html#LogicCircuits-Module-API-1","page":"LogicCircuits.jl Documentation","title":"LogicCircuits Module API","text":"","category":"section"},{"location":"index.html#","page":"LogicCircuits.jl Documentation","title":"LogicCircuits.jl Documentation","text":"Modules = [LogicCircuits]","category":"page"}]
}
